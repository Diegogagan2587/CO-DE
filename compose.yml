version: "3"

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    build:
      context: .
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80

  server:
    container_name: server
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    command: ./start.sh
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - nginx

  client:
    container_name: client
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    depends_on:
      - nginx

  db:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - 27018:27017
    volumes:
      - db:/data/db
    env_file:
      - ./backend/.env
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - 6380:6379
    command: redis-server --save 60 1 --loglevel verbose --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data

  daphne:
    container_name: websocket-server
    build:
      context: ./backend
    command: ./start-daphne.sh
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - server

volumes:
  db:
    driver: local
  redis:
    driver: local
